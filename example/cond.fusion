Cmp = (T: type) -> bool {
	protocol {
		less_than: (T, T) -> T,
		greater_than: (T, T) -> T,
		equal: (T, T) -> T,
	}
}

clamp = [T: Cmp](x: T, min: T, max: T) -> T {
	cond(
		x < min => { min },
		x > max => { max },
		true => { x },
	)
}

clampAll = [T: Cmp](xs: Seq(T)) -> Seq(T) {
	x <- map(xs)
	x.clamp(min=0, max=100)
}

main = () -> i32 {
	[95, 105, 75, 35, 10, -3].clampAll.mean
}
